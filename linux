#!/usr/bin/env bash
### end common-components/bash-shebang

# Welcome to the thoughtbot laptop script! Be prepared to turn your laptop (or
# desktop, no haters here) into an awesome development machine.

# This file is auto-generated. Do not edit it by hand unless you know what
# you're doing. Please see 'CONTRIBUTING.md' for more information.
### end common-components/header

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
### end common-components/exit-trap

fancy_echo() {
  printf "\n%b\n" "$1"
}
### end common-components/shared-functions

if ! grep -qiE 'precise|quantal|wheezy|raring|jessie|saucy' /etc/os-release; then
  fancy_echo "Sorry! we don't currently support that distro."
  exit 1
fi
### end linux-components/distro-check

fancy_echo "Updating system packages ..."
  if command -v aptitude >/dev/null; then
    fancy_echo "Using aptitude ..."
  else
    fancy_echo "Installing aptitude ..."
    sudo apt-get install -y aptitude
  fi

  sudo aptitude update
### end linux-components/debian-package-update

fancy_echo "Installing git, for source control management ..."
  sudo aptitude install -y git

fancy_echo "Installing base ruby build dependencies ..."
  sudo aptitude build-dep -y ruby1.9.3

fancy_echo "Installing libraries for common gem dependencies ..."
  sudo aptitude install -y libxslt1-dev libcurl4-openssl-dev libksba8 libksba-dev libqtwebkit-dev libreadline-dev

fancy_echo "Installing sqlite3, for prototyping database-backed rails apps"
 sudo aptitude install -y libsqlite3-dev sqlite3

fancy_echo "Installing Postgres, a good open source relational database ..."
  sudo aptitude install -y postgresql postgresql-server-dev-all

fancy_echo "Installing Redis, a good key-value database ..."
  sudo aptitude install -y redis-server

fancy_echo "Installing ctags, to index files for vim tab completion of methods, classes, variables ..."
  sudo aptitude install -y exuberant-ctags

fancy_echo "Installing vim ..."
  sudo aptitude install -y vim-gtk

fancy_echo "Installing tmux, to save project state and switch between projects ..."
  sudo aptitude install -y tmux

fancy_echo "Installing ImageMagick, to crop and resize images ..."
  sudo aptitude install -y imagemagick

fancy_echo "Installing watch, to execute a program periodically and show the output ..."
  sudo aptitude install -y watch

fancy_echo "Installing curl ..."
  sudo aptitude install -y curl

fancy_echo "Installing zsh ..."
  sudo aptitude install -y zsh

fancy_echo "Installing node, to render the rails asset pipeline ..."
  sudo aptitude install -y nodejs
### end linux-components/debian-derivative-packages

fancy_echo "Changing your shell to zsh ..."
  chsh -s $(which zsh)
### end common-components/zsh

if ! which ag &>/dev/null; then
  fancy_echo "Installing The Silver Searcher (better than ack or grep) to search the contents of files ..."
    git clone git://github.com/ggreer/the_silver_searcher.git /tmp/the_silver_searcher
    sudo aptitude install -y automake pkg-config libpcre3-dev zlib1g-dev liblzma-dev
    sh /tmp/the_silver_searcher/build.sh
    cd /tmp/the_silver_searcher
    sh build.sh
    sudo make install
    cd
    rm -rf /tmp/the_silver_searcher
fi
### end linux-components/silver-searcher-from-source

if [[ ! -d "$HOME/.rbenv" ]]; then
  fancy_echo "Installing rbenv, to change Ruby versions ..."
    git clone git://github.com/sstephenson/rbenv.git ~/.rbenv

    if ! grep -qs "rbenv init" ~/.zshrc; then
      printf 'export PATH="$HOME/.rbenv/bin:$PATH"\n' >> ~/.zshrc
      printf 'eval "$(rbenv init - --no-rehash)"\n' >> ~/.zshrc
    fi

    export PATH="$HOME/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
fi

if [[ ! -d "$HOME/.rbenv/plugins/rbenv-gem-rehash" ]]; then
  fancy_echo "Installing rbenv-gem-rehash so the shell automatically picks up binaries after installing gems with binaries..."
    git clone https://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash
fi

if [[ ! -d "$HOME/.rbenv/plugins/ruby-build" ]]; then
  fancy_echo "Installing ruby-build, to install Rubies ..."
    git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
fi
### end linux-components/rbenv

RUBY_VERSION="2.1.1"

fancy_echo "Installing Ruby $RUBY_VERSION ..."
  rbenv install $RUBY_VERSION

fancy_echo "Setting $RUBY_VERSION as global default Ruby ..."
  rbenv global $RUBY_VERSION
  rbenv rehash

fancy_echo "Updating to latest Rubygems version ..."
  gem update --system

fancy_echo "Installing standard Ruby gems ..."
  gem install bundler rails jekyll sass compass github-pages middleman redcarpet --no-document
### end common-components/ruby-environment

